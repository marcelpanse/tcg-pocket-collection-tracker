import{c as L,r as u,m as N,j as c,l as O,ax as M,aA as k,I as P,U as $,C as U,B as D,M as A}from"./index-Do42wW4I.js";/**
 * @license lucide-react v0.539.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const B=[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]],R=L("plus",B);function T({selected:t,setIsSelected:m,card:d,size:f="default",clickable:n=!0}){const e=u.useRef(null),[i,p]=u.useState({x:0,y:0}),[a,r]=u.useState(!1),o=u.useRef(X(l=>p(l),50)),w=l=>{o.current({x:l.clientX,y:l.clientY})},g=u.useCallback(()=>{r(!0),window.addEventListener("mousemove",w)},[]),S=u.useCallback(()=>{r(!1),window.removeEventListener("mousemove",w)},[]);let x=0,y=0;if(e.current&&a){const l=e.current.getBoundingClientRect(),_=l.left+l.width/2,E=l.top+l.height/2;x=i.x-_,y=i.y-E}const v=(l,_,E)=>Math.min(Math.max(l,_),E),I=a?v(x/4,-10,10):0,s=a?v(-y/4,-10,10):0,h={transform:`perspective(1000px)
                   rotateY(${I}deg)
                   rotateX(${s}deg)
                   scale(${a?1.04:1})`,transition:"transform 0.3s cubic-bezier(0.17, 0.67, 0.5, 1.03)",transformStyle:"preserve-3d",cursor:n?"pointer":"default",opacity:t?1:.5,width:f==="small"?"80px":"100%",height:f==="small"?"112px":"auto"},C=d.image?.split("/").at(-1),b=`/images/${N.language}/${C}`;return c.jsx("div",{style:{flex:"1 0 20%",perspective:"1000px",transformStyle:typeof navigator<"u"&&navigator.userAgent.toLowerCase().includes("firefox")?"flat":"preserve-3d",display:"flex",justifyContent:"center",alignItems:"center",zIndex:a?10:0},children:C&&c.jsx("img",{draggable:!1,loading:"lazy",onMouseDown:()=>m?.(!t),ref:e,className:"card-test",style:h,src:b,alt:O(d,N.language),onMouseEnter:g,onMouseLeave:S,onError:l=>{l.target.src=d.image}})})}const X=(t,m)=>{let d=0,f=null;return(...n)=>{const e=performance.now(),i=e-d;if(i<m){f||(f=setTimeout(()=>{d=performance.now(),f=null,t(...n)},m-i));return}d=e,t(...n)}},j={};function z({card:t,onImageClick:m,useMaxWidth:d=!1,editable:f=!0}){const n=P(),{user:e,setIsLoginDialogOpen:i}=u.use($),{ownedCards:p,setOwnedCards:a,setSelectedCardId:r}=u.use(U),[o,w]=u.useState(t.amount_owned||0),[g,S]=u.useState(0);u.useEffect(()=>{S(o)},[o]);const x=u.useCallback(async(s,h)=>{const C=Math.max(0,h);w(C),j[s]&&window.clearTimeout(j[s]),j[s]=window.setTimeout(async()=>{if(!e||!e.user.email)throw new Error("User not logged in");const b=p.find(_=>_.card_id===s);b?b.amount_owned=C:p.push({email:e.user.email,card_id:s,amount_owned:C,updated_at:new Date().toISOString()});const{error:l}=await M.from("collection").upsert({card_id:s,amount_owned:C,email:e.user.email,updated_at:new Date().toISOString()});if(l)throw new Error("Error updating collection");k(p,e.user.email)},1e3)},[p,e,a,o]),y=u.useCallback(async s=>{if(!e){i(!0);return}await x(s,o+1)},[x]),v=u.useCallback(async s=>{if(!e){i(!0);return}await x(s,o-1)},[x]),I=async s=>{const h=s.target.value===""?0:Number.parseInt(s.target.value,10);!Number.isNaN(h)&&h>=0&&await x(t.card_id,h)};return t.linkedCardID?null:c.jsxs("div",{className:`group flex w-fit ${d?"":"max-w-32 md:max-w-40"} flex-col items-center rounded-lg`,children:[c.jsx("button",{type:"button",className:"cursor-pointer",onClick:()=>{r(t.card_id),m?.()},children:c.jsx(T,{card:t,selected:o>0,clickable:!d})}),c.jsxs("p",{className:"max-w-[130px] overflow-hidden text-ellipsis whitespace-nowrap font-semibold text-[12px] pt-2",children:[t.card_id," - ",O(t,N.language)]}),c.jsx("div",{className:"flex items-center gap-x-1",children:f&&!n.friendId?c.jsxs(c.Fragment,{children:[c.jsx(D,{variant:"ghost",size:"icon",onClick:()=>v(t.card_id),className:"rounded-full",tabIndex:-1,children:c.jsx(A,{})}),c.jsx("input",{min:"0",max:"99",type:"text",disabled:!!n.friendId,value:g,onChange:I,className:"w-7 text-center border-none rounded",onFocus:s=>s.target.select()}),c.jsx(D,{variant:"ghost",size:"icon",className:"rounded-full",onClick:()=>y(t.card_id),tabIndex:-1,children:c.jsx(R,{})})]}):c.jsx("span",{className:"mt-1",children:o})})]})}const F=async(t,m,d,f,n)=>{if(!n||!n.user.email)throw new Error("User not logged in");if(m<0)throw new Error("New amount cannot be negative");const e=[...d],i=t.map(a=>({card_id:a,amount_owned:m,email:n.user.email,updated_at:new Date().toISOString()})),{error:p}=await M.from("collection").upsert(i);if(p)throw new Error("Error bulk updating collection");k(e,n.user.email);for(const a of t){const r=e.find(o=>o.card_id===a);r?(console.log("Updating existing card:",a),r.amount_owned=m):r||(console.log("Adding new card:",a),e.push({email:n.user.email,card_id:a,amount_owned:m,updated_at:new Date().toISOString()}))}f([...e])},H=async(t,m,d,f,n)=>{if(!n||!n.user.email)throw new Error("User not logged in");const e=new Map;for(const r of t)e.set(r,(e.get(r)||0)+m);const i=[...d],p=[];for(const[r,o]of e){const w=i.find(g=>g.card_id===r);if(w)console.log("Incrementing existing card:",r,"from",w.amount_owned,"to",w.amount_owned+o),w.amount_owned+=o,w.updated_at=new Date().toISOString(),p.push(w);else if(!w&&o>0){console.log("Adding new card:",r,"with amount",o);const g={email:n.user.email,card_id:r,amount_owned:o,updated_at:new Date().toISOString()};i.push(g),p.push(g)}}const{error:a}=await M.from("collection").upsert(p);if(a)throw new Error(`Error bulk updating collection: ${a.message}`);return k(i,n.user.email),f([...i]),p};export{z as C,T as F,R as P,H as i,F as u};
