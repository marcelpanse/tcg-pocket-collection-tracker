import{c as L,r as d,m as N,j as l,l as O,ax as M,aA as k,J as P,U as $,C as U,B as D,M as A}from"./index-B6evWP0w.js";/**
 * @license lucide-react v0.539.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const B=[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]],R=L("plus",B);function T({selected:n,setIsSelected:c,card:u,size:m="default",clickable:e=!0}){const a=d.useRef(null),[o,w]=d.useState({x:0,y:0}),[s,t]=d.useState(!1),f=d.useRef(X(i=>w(i),50)),p=i=>{f.current({x:i.clientX,y:i.clientY})},g=d.useCallback(()=>{t(!0),window.addEventListener("mousemove",p)},[]),x=d.useCallback(()=>{t(!1),window.removeEventListener("mousemove",p)},[]);let y=0,v=0;if(a.current&&s){const i=a.current.getBoundingClientRect(),I=i.left+i.width/2,E=i.top+i.height/2;y=o.x-I,v=o.y-E}const b=(i,I,E)=>Math.min(Math.max(i,I),E),r=s?b(y/4,-10,10):0,h=s?b(-v/4,-10,10):0,C={transform:`perspective(1000px)
                   rotateY(${r}deg)
                   rotateX(${h}deg)
                   scale(${s?1.04:1})`,transition:"transform 0.3s cubic-bezier(0.17, 0.67, 0.5, 1.03)",transformStyle:"preserve-3d",cursor:e?"pointer":"default",opacity:n?1:.5,width:m==="small"?"80px":"100%",height:m==="small"?"112px":"auto"},_=u.image?.split("/").at(-1),S=`/images/${N.language}/${_}`;return l.jsx("div",{style:{flex:"1 0 20%",perspective:"1000px",transformStyle:typeof navigator<"u"&&navigator.userAgent.toLowerCase().includes("firefox")?"flat":"preserve-3d",display:"flex",justifyContent:"center",alignItems:"center",zIndex:s?10:0},children:_&&l.jsx("img",{draggable:!1,loading:"lazy",onMouseDown:()=>c?.(!n),ref:a,className:"card-test",style:C,src:S,alt:O(u,N.language),onMouseEnter:g,onMouseLeave:x,onError:i=>{i.target.src=u.image}})})}const X=(n,c)=>{let u=0,m=null;return(...e)=>{const a=performance.now(),o=a-u;if(o<c){m||(m=setTimeout(()=>{u=performance.now(),m=null,n(...e)},c-o));return}u=a,n(...e)}},j={};function z({card:n,useMaxWidth:c=!1,editable:u=!0}){const m=P(),{user:e,setIsLoginDialogOpen:a}=d.use($),{ownedCards:o,setOwnedCards:w,setSelectedCardId:s}=d.use(U),[t,f]=d.useState(n.amount_owned||0),[p,g]=d.useState(0);d.useEffect(()=>{g(t)},[t]);const x=d.useCallback(async(r,h)=>{const C=Math.max(0,h);f(C),j[r]&&window.clearTimeout(j[r]),j[r]=window.setTimeout(async()=>{if(!e||!e.user.email)throw new Error("User not logged in");const _=o.find(i=>i.card_id===r);_?_.amount_owned=C:o.push({email:e.user.email,card_id:r,amount_owned:C,updated_at:new Date().toISOString()});const{error:S}=await M.from("collection").upsert({card_id:r,amount_owned:C,email:e.user.email,updated_at:new Date().toISOString()});if(S)throw new Error("Error updating collection");k(o,e.user.email)},1e3)},[o,e,w,t]),y=d.useCallback(async r=>{if(!e){a(!0);return}await x(r,t+1)},[x]),v=d.useCallback(async r=>{if(!e){a(!0);return}await x(r,t-1)},[x]),b=async r=>{const h=r.target.value===""?0:Number.parseInt(r.target.value,10);!Number.isNaN(h)&&h>=0&&await x(n.card_id,h)};return n.linkedCardID?null:l.jsxs("div",{className:`group flex w-fit ${c?"":"max-w-32 md:max-w-40"} flex-col items-center rounded-lg`,children:[l.jsx("button",{type:"button",className:"cursor-pointer",onClick:()=>s(n.card_id),children:l.jsx(T,{card:n,selected:t>0,clickable:!c})}),l.jsxs("p",{className:"max-w-[130px] overflow-hidden text-ellipsis whitespace-nowrap font-semibold text-[12px] pt-2",children:[n.card_id," - ",O(n,N.language)]}),l.jsx("div",{className:"flex items-center gap-x-1",children:u&&!m.friendId?l.jsxs(l.Fragment,{children:[l.jsx(D,{variant:"ghost",size:"icon",onClick:()=>v(n.card_id),className:"rounded-full",tabIndex:-1,children:l.jsx(A,{})}),l.jsx("input",{min:"0",max:"99",type:"text",disabled:!!m.friendId,value:p,onChange:b,className:"w-7 text-center border-none rounded",onFocus:r=>r.target.select()}),l.jsx(D,{variant:"ghost",size:"icon",className:"rounded-full",onClick:()=>y(n.card_id),tabIndex:-1,children:l.jsx(R,{})})]}):l.jsx("span",{className:"mt-1",children:t})})]})}const F=async(n,c,u,m,e)=>{if(!e||!e.user.email)throw new Error("User not logged in");if(c<0)throw new Error("New amount cannot be negative");const a=[...u],o=n.map(s=>({card_id:s,amount_owned:c,email:e.user.email,updated_at:new Date().toISOString()})),{error:w}=await M.from("collection").upsert(o);if(w)throw new Error("Error bulk updating collection");k(a,e.user.email);for(const s of n){const t=a.find(f=>f.card_id===s);t?(console.log("Updating existing card:",s),t.amount_owned=c):t||(console.log("Adding new card:",s),a.push({email:e.user.email,card_id:s,amount_owned:c,updated_at:new Date().toISOString()}))}m([...a])},H=async(n,c,u,m,e)=>{if(!e||!e.user.email)throw new Error("User not logged in");const a=new Map;for(const t of n)a.set(t,(a.get(t)||0)+c);const o=[...u],w=[];for(const[t,f]of a){const p=o.find(g=>g.card_id===t);if(p)console.log("Incrementing existing card:",t,"from",p.amount_owned,"to",p.amount_owned+f),p.amount_owned+=f,p.updated_at=new Date().toISOString(),w.push(p);else if(!p&&f>0){console.log("Adding new card:",t,"with amount",f);const g={email:e.user.email,card_id:t,amount_owned:f,updated_at:new Date().toISOString()};o.push(g),w.push(g)}}const{error:s}=await M.from("collection").upsert(w);if(s)throw new Error(`Error bulk updating collection: ${s.message}`);return k(o,e.user.email),m([...o]),w};export{z as C,T as F,R as P,H as i,F as u};
